// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DbStore Create Test: after autoselectable search with option enabled and set automatically 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: after autoselectable search with option enabled but too many results 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: after autoselectable search without option enabled 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: after reset 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: after reset 2`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 0,
  "lastUsed": [
    7
  ]
}
</div>
`;

exports[`DbStore Create Test: customPresearch for Text 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "customPre",
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1
}
</div>
`;

exports[`DbStore Create Test: customPresearch for my 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "customPre",
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1
}
</div>
`;

exports[`DbStore Create Test: customPresearch for null 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "customPre",
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1
}
</div>
`;

exports[`DbStore Create Test: multi added and loaded 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "value": [
    3,
    4,
    5
  ],
  "relatedObject": [
    {
      "myString": "myText 3",
      "myNum": 423,
      "id": 3
    },
    {
      "myString": "myText 4",
      "myNum": 424,
      "id": 4
    },
    {
      "myString": "myText 5",
      "myNum": 425,
      "id": 5
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 0
}
</div>
`;

exports[`DbStore Create Test: multi added but not yet loaded 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "value": [
    3,
    4,
    5
  ],
  "relatedObject": [
    {
      "myString": "myText 3",
      "myNum": 423,
      "id": 3
    },
    null,
    {
      "myString": "myText 5",
      "myNum": 425,
      "id": 5
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 0
}
</div>
`;

exports[`DbStore Create Test: multi after autoselectable search with option enabled but too many results 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 0,
  "lastUsed": [
    7
  ]
}
</div>
`;

exports[`DbStore Create Test: multi after autoselectable search without option enabled 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 0,
  "lastUsed": [
    7
  ]
}
</div>
`;

exports[`DbStore Create Test: multi load with none missing 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "value": [
    3,
    4,
    5
  ],
  "relatedObject": [
    {
      "myString": "myText 3",
      "myNum": 423,
      "id": 3
    },
    null,
    {
      "myString": "myText 5",
      "myNum": 425,
      "id": 5
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: multi load with one missing 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "value": [
    3,
    4,
    5
  ],
  "relatedObject": [
    {
      "myString": "myText 3",
      "myNum": 423,
      "id": 3
    },
    null,
    {
      "myString": "myText 5",
      "myNum": 425,
      "id": 5
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: multi removed one 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "value": [
    3,
    4,
    5
  ],
  "relatedObject": [
    {
      "myString": "myText 3",
      "myNum": 423,
      "id": 3
    },
    null,
    {
      "myString": "myText 5",
      "myNum": 425,
      "id": 5
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: multi removed two 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "value": [
    3,
    4,
    5
  ],
  "relatedObject": [
    {
      "myString": "myText 3",
      "myNum": 423,
      "id": 3
    },
    null,
    {
      "myString": "myText 5",
      "myNum": 425,
      "id": 5
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: multiafter autoselectable search with option enabled and set automatically 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 0,
  "lastUsed": [
    7
  ]
}
</div>
`;

exports[`DbStore Create Test: multiafter autoselectable search with option enabled and set automatically twice 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 0,
  "lastUsed": [
    7
  ]
}
</div>
`;

exports[`DbStore Create Test: nothing set yet 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: nothing yet 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: nothing yet 2`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "value": [
    7
  ],
  "relatedObject": [
    {
      "myString": "myText 7",
      "myNum": 427,
      "id": 7
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1,
  "lastUsed": [
    7
  ]
}
</div>
`;

exports[`DbStore Create Test: nothing yet 3`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "",
  "value": [
    3,
    4,
    5
  ],
  "relatedObject": [
    {
      "myString": "myText 3",
      "myNum": 423,
      "id": 3
    },
    {
      "myString": "myText 4",
      "myNum": 424,
      "id": 4
    },
    {
      "myString": "myText 5",
      "myNum": 425,
      "id": 5
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1
}
</div>
`;

exports[`DbStore Create Test: nothing yet 4`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "customPre",
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1
}
</div>
`;

exports[`DbStore Create Test: search for Text 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "value": [
    7
  ],
  "relatedObject": [
    {
      "myString": "myText 7",
      "myNum": 427,
      "id": 7
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1,
  "lastUsed": [
    7
  ]
}
</div>
`;

exports[`DbStore Create Test: search for Text 2`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "",
  "value": [
    3,
    4,
    5
  ],
  "relatedObject": [
    {
      "myString": "myText 3",
      "myNum": 423,
      "id": 3
    },
    {
      "myString": "myText 4",
      "myNum": 424,
      "id": 4
    },
    {
      "myString": "myText 5",
      "myNum": 425,
      "id": 5
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1
}
</div>
`;

exports[`DbStore Create Test: search for Text but displaymode for items 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "value": [
    7
  ],
  "relatedObject": [
    {
      "myString": "myText 7",
      "myNum": 427,
      "id": 7
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 0,
  "lastUsed": [
    7
  ]
}
</div>
`;

exports[`DbStore Create Test: search for my 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "value": [
    7
  ],
  "relatedObject": [
    {
      "myString": "myText 7",
      "myNum": 427,
      "id": 7
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1,
  "lastUsed": [
    7
  ]
}
</div>
`;

exports[`DbStore Create Test: search for my 2`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "",
  "value": [
    3,
    4,
    5
  ],
  "relatedObject": [
    {
      "myString": "myText 3",
      "myNum": 423,
      "id": 3
    },
    {
      "myString": "myText 4",
      "myNum": 424,
      "id": 4
    },
    {
      "myString": "myText 5",
      "myNum": 425,
      "id": 5
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1
}
</div>
`;

exports[`DbStore Create Test: search for null 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "value": [
    7
  ],
  "relatedObject": [
    {
      "myString": "myText 7",
      "myNum": 427,
      "id": 7
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1,
  "lastUsed": [
    7
  ]
}
</div>
`;

exports[`DbStore Create Test: search for null 2`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedByMulti",
    "type": 14,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "",
  "value": [
    3,
    4,
    5
  ],
  "relatedObject": [
    {
      "myString": "myText 3",
      "myNum": 423,
      "id": 3
    },
    {
      "myString": "myText 4",
      "myNum": 424,
      "id": 4
    },
    {
      "myString": "myText 5",
      "myNum": 425,
      "id": 5
    }
  ],
  "searchForm": {
    "model": "searchFor.ownedByMulti",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  },
  "displayMode": 1
}
</div>
`;

exports[`DbStore Create Test: set to first creation loaded 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "value": 1,
  "relatedObject": {
    "myString": "myText 1",
    "myNum": 421,
    "id": 1
  },
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: set to first creation not loaded yet 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "value": 0,
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: set to invalid value 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "value": "INVALID",
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: single search for Text 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: single search for my 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;

exports[`DbStore Create Test: single search for null 1`] = `
<div
  class="mymock"
>
  {
  "field": {
    "mapTo": "ownedBy",
    "type": 13,
    "validate": {
      "relationshipCollection": "simpleTestCol",
      "relationshipNamePath": "myString"
    }
  },
  "prefix": "ownedBy",
  "searchForm": {
    "model": "searchFor.ownedBy",
    "collection": "simpleTestCol",
    "sections": [
      {
        "fields": [
          {
            "mapTo": "myString",
            "type": 2,
            "validate": {}
          }
        ]
      }
    ]
  }
}
</div>
`;
