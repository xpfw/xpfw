// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DbStore Create Test: Before reset on mount 1`] = `
FormStoreClass {
  "errors": Object {
    "formModel": Object {
      "errors": Array [
        "a",
        "b",
      ],
    },
  },
  "formData": Object {
    "authForm": undefined,
    "formModel": Object {
      "guestName": "myText",
      "myVal": 420,
    },
  },
  "loading": Object {
    "formModel": false,
  },
}
`;

exports[`DbStore Create Test: Before reset on mount 2`] = `
FormStoreClass {
  "errors": Object {
    "createpref": Object {
      "formModel": Object {
        "errors": Array [
          "a",
          "b",
        ],
      },
    },
    "formModel": Object {
      "errors": Array [
        "a",
        "b",
      ],
    },
  },
  "formData": Object {
    "authForm": undefined,
    "createpref": Object {
      "formModel": Object {
        "guestName": "SECOND OBJECT",
        "myVal": 421,
      },
    },
    "formModel": Object {
      "guestName": "myText",
      "myVal": 420,
    },
  },
  "loading": Object {
    "createpref": false,
    "formModel": false,
  },
}
`;

exports[`DbStore Create Test: after create 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="myText"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={420}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-success"
  >
    Successfully created 
    0
  </div>
</div>
`;

exports[`DbStore Create Test: after login 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
</div>
`;

exports[`DbStore Create Test: after purposely set invalid err 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="myText"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={420}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-danger"
  >
    Error please recheck your inputs or connection 
    {"errors":["a","b"]}
  </div>
</div>
`;

exports[`DbStore Create Test: after reset on mount 1`] = `
FormStoreClass {
  "errors": Object {
    "formModel": Object {
      "errors": Array [
        "a",
        "b",
      ],
    },
  },
  "formData": Object {
    "authForm": undefined,
    "formModel": Object {
      "guestName": "myText",
      "myVal": 420,
    },
  },
  "loading": Object {
    "formModel": false,
  },
}
`;

exports[`DbStore Create Test: after reset on mount 2`] = `
FormStoreClass {
  "errors": Object {
    "createpref": Object {
      "formModel": Object {
        "errors": Array [
          "a",
          "b",
        ],
      },
    },
    "formModel": Object {
      "errors": Array [
        "a",
        "b",
      ],
    },
  },
  "formData": Object {
    "authForm": undefined,
    "createpref": Object {
      "formModel": Object {
        "guestName": "SECOND OBJECT",
        "myVal": 421,
      },
    },
    "formModel": Object {
      "guestName": "myText",
      "myVal": 420,
    },
  },
  "loading": Object {
    "createpref": false,
    "formModel": false,
  },
}
`;

exports[`DbStore Create Test: before create 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="myText"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={420}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
</div>
`;

exports[`DbStore Create Test: before login 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
</div>
`;

exports[`DbStore Create Test: hidden in create 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="myText"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={420}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-danger"
  >
    Error please recheck your inputs or connection 
    {"errors":["a","b"]}
  </div>
</div>
`;

exports[`DbStore Create Test: hidden text 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="myText"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={420}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-danger"
  >
    Error please recheck your inputs or connection 
    {"errors":["a","b"]}
  </div>
</div>
`;

exports[`DbStore Create Test: not hidden in create 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="myText"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={420}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-danger"
  >
    Error please recheck your inputs or connection 
    {"errors":["a","b"]}
  </div>
</div>
`;

exports[`DbStore Create Test: prefixed after create 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="SECOND OBJECT"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={421}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
</div>
`;

exports[`DbStore Create Test: prefixed after purposely set invalid err 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="SECOND OBJECT"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={421}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-danger"
  >
    Error please recheck your inputs or connection 
    {"errors":["a","b"]}
  </div>
</div>
`;

exports[`DbStore Create Test: prefixed before create 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
</div>
`;

exports[`DbStore Create Test: prefixed hidden in create 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="SECOND OBJECT"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={421}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-danger"
  >
    Error please recheck your inputs or connection 
    {"errors":["a","b"]}
  </div>
</div>
`;

exports[`DbStore Create Test: prefixed hidden text 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="SECOND OBJECT"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={421}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-danger"
  >
    Error please recheck your inputs or connection 
    {"errors":["a","b"]}
  </div>
</div>
`;

exports[`DbStore Create Test: prefixed not hidden in create 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="SECOND OBJECT"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={421}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-danger"
  >
    Error please recheck your inputs or connection 
    {"errors":["a","b"]}
  </div>
</div>
`;

exports[`DbStore Create Test: prefixed while loading 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="SECOND OBJECT"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={421}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
</div>
`;

exports[`DbStore Create Test: resetOnMount = true 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="myText"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={420}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-danger"
  >
    Error please recheck your inputs or connection 
    {"errors":["a","b"]}
  </div>
</div>
`;

exports[`DbStore Create Test: resetOnMount = true 2`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="myText"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={420}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-danger"
  >
    Error please recheck your inputs or connection 
    {"errors":["a","b"]}
  </div>
</div>
`;

exports[`DbStore Create Test: while loading 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      guestName
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="text"
      value="myText"
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      myVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="number"
      value={420}
    />
  </div>
  <div
    className="field"
  >
    <label
      className="label"
    >
      dateVal
    </label>
    <input
      className="input"
      onChange={[Function]}
      type="date"
      value="2011-05-05"
    />
  </div>
  <a
    className="button is-primary"
    onClick={[Function]}
  >
    Create
  </a>
  <div
    className="notification is-success"
  >
    Successfully created 
    0
  </div>
</div>
`;
