// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DbStore Create Test: After calling create 1`] = `
Object {
  "createState": Object {
    "formModel": Object {
      "belongsTo": "myuserid",
      "createdAt": "2011-05-05T14:20:43.337Z",
      "guestName": "myText",
      "id": 0,
      "myVal": 420,
    },
  },
  "currentlyEditing": "",
  "fetching": Object {},
  "formsToUpdate": Array [],
  "getFromServer": [Function],
  "getState": Object {
    "simpleTestCol": Object {
      "0": Object {
        "belongsTo": "myuserid",
        "createdAt": "2011-05-05T14:20:43.337Z",
        "guestName": "myText",
        "id": 0,
        "myVal": 420,
      },
    },
  },
  "lastFetch": Object {
    "0": 1304605243337,
  },
  "removeState": Object {},
  "updateState": Object {},
}
`;

exports[`DbStore Create Test: Before calling create 1`] = `
Object {
  "createState": Object {},
  "currentlyEditing": "",
  "fetching": Object {},
  "formsToUpdate": Array [],
  "getFromServer": [Function],
  "getState": Object {},
  "lastFetch": Object {},
  "removeState": Object {},
  "updateState": Object {},
}
`;

exports[`DbStore Create Test: getresult 1`] = `
Object {
  "belongsTo": "myuserid",
  "createdAt": "2011-05-05T14:20:43.337Z",
  "guestName": "myText",
  "id": 0,
  "myVal": 420,
  Symbol(mobx administration): ObservableObjectAdministration$$1 {
    "defaultEnhancer": [Function],
    "keysAtom": Atom$$1 {
      "diffValue": 0,
      "isBeingObserved": false,
      "isPendingUnobservation": false,
      "lastAccessedBy": 0,
      "lowestObserverState": 2,
      "name": "DbStoreClass@3.getState.simpleTestCol.0.keys",
      "observers": Set {},
    },
    "name": "DbStoreClass@3.getState.simpleTestCol.0",
    "pendingKeys": Map {
      "isMobXObservableValue" => false,
      "isMobXObservableSet" => false,
      "isMobXObservableMap" => false,
      "then" => false,
      "$$typeof" => false,
      "nodeType" => false,
      "@@__IMMUTABLE_ITERABLE__@@" => false,
      "@@__IMMUTABLE_RECORD__@@" => false,
      "_isMockFunction" => false,
      "toJSON" => false,
    },
    "proxy": [Circular],
    "target": Object {
      "belongsTo": "myuserid",
      "createdAt": "2011-05-05T14:20:43.337Z",
      "guestName": "myText",
      "id": 0,
      "myVal": 420,
      Symbol(mobx administration): [Circular],
    },
    "values": Map {
      "guestName" => "myText",
      "myVal" => 420,
      "createdAt" => "2011-05-05T14:20:43.337Z",
      "belongsTo" => "myuserid",
      "id" => 0,
    },
  },
}
`;
