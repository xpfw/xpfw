// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Text Field Test: as number field 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    myNum
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="number"
  />
</div>
`;

exports[`Text Field Test: as number field with number 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    myNum
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="number"
    value={5432}
  />
</div>
`;

exports[`Text Field Test: as number field with string 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    myNum
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="number"
    value="gfsdfasd"
  />
</div>
`;

exports[`Text Field Test: as number field with string number 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    myNum
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="number"
    value="125"
  />
</div>
`;

exports[`Text Field Test: as slider field 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    myNum
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="range"
  />
</div>
`;

exports[`Text Field Test: as slider field with number 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    myNum: 5432
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="range"
    value={5432}
  />
</div>
`;

exports[`Text Field Test: as slider field with string 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    myNum: gfsdfasd
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="range"
    value="gfsdfasd"
  />
</div>
`;

exports[`Text Field Test: as slider field with string number 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    myNum: 125
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="range"
    value="125"
  />
</div>
`;

exports[`Text Field Test: date with content 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    dateVal
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="datetime-local"
    value="2012-01-11T00:00"
  />
</div>
`;

exports[`Text Field Test: datetime-local with content 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    dateVal
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="datetime-local"
    value="2018-02-22T07:55"
  />
</div>
`;

exports[`Text Field Test: empty datetime-local field 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    dateVal
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="datetime-local"
    value="2011-05-05T16:20"
  />
</div>
`;

exports[`Text Field Test: empty render 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    undefined
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="text"
  />
</div>
`;

exports[`Text Field Test: namefield 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    guestName
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="text"
  />
</div>
`;

exports[`Text Field Test: namefield changed va 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    guestName
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="text"
    value="myval"
  />
</div>
`;

exports[`Text Field Test: password field 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    pwval
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="password"
  />
</div>
`;

exports[`Text Field Test: time with content 1`] = `
<div
  class="field"
>
  <label
    class="label"
  >
    dateVal
  </label>
  <input
    class="input is-success"
    oninput={[Function]}
    type="datetime-local"
    value="Invalid date"
  />
</div>
`;
